class Solution {
public:
    bool canFinish(int numCourses, vector<vector<int>>& prerequisites) {
        int in[100010], q[100010], hh = 0, tt = -1;
        int e[5005], ne[5005], h[5005], idx = 0;
        memset(h, -1, sizeof h);
        for (int i = 0; i < prerequisites.size(); i ++) {
            int a = prerequisites[i][1], b = prerequisites[i][0];
            e[idx] = b;
            ne[idx] = h[a];
            h[a] = idx ++;
        }
        memset(q, 0, sizeof q);
        memset(in, 0, sizeof in);
        for (int i = 0; i < prerequisites.size(); i ++) in[prerequisites[i][0]] ++;
        for (int i = 0; i < numCourses; i ++) if (in[i] == 0) q[++ tt] = i;
        while (hh <= tt) {
            int a = q[hh ++];
            for (int i = h[a]; i != -1; i = ne[i]) {
                in[e[i]] --;
                if (in[e[i]] == 0) q[++ tt] = e[i];
            }
        }
        return tt == numCourses - 1;
    }
};